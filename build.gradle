buildscript {
    repositories {
        maven {
            url "http://maven.aliyun.com/nexus/content/groups/public/"
        }
        maven {
            url "http://115.28.148.171:8082/nexus/content/groups/public/"
        }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:2.0.0.RELEASE")
        classpath group: 'mysql', name: 'mysql-connector-java', version: '6.0.6'
        classpath("cn.togeek.plugin:liquibase:1.0.0-SNAPSHOT")
        classpath("cn.togeek.plugin:jooq:1.0.0-SNAPSHOT")
    }
}

apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'cn.togeek.plugin.jooq'
apply plugin: 'cn.togeek.plugin.liquibase'

bootJar {
    baseName = 'activiti'
    version =  '1.0.0-SNAPSHOT'
}

repositories {
    maven {
        url "http://maven.aliyun.com/nexus/content/groups/public/"
    }
    maven {
        url "${nexusUrl}/content/groups/public/"
    }
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
    compile("cn.togeek.power-base:power-base-service:2.0.0-SNAPSHOT");
    compile("org.springframework.boot:spring-boot-starter-thymeleaf");
    compile("net.sourceforge.nekohtml:nekohtml:1.9.22");
    compile("org.activiti:activiti-engine:5.22.0");
    compile("org.activiti:activiti-spring:5.22.0");
    compile("org.activiti:activiti-modeler:5.22.0");
    compile("org.activiti:activiti-diagram-rest:5.22.0");
    compile 'cn.hutool:hutool-all:4.0.8'
    compile group: 'org.liquibase', name: 'liquibase-core', version: '3.6.1'
    runtime group: 'mysql', name: 'mysql-connector-java', version: '6.0.6'
    testCompile("org.springframework.boot:spring-boot-starter-test");
}

configurations {
    all*.exclude module: 'spring-boot-starter-logging'
    all*.exclude module: 'logback-core'
    all*.exclude module: 'logback-classic'
}

task buildTask(type: Jar, dependsOn: bootJar) {
    doLast {
        copy {
            from 'k8s'
            into 'build/k8s'
        }
        copy {
            from 'docker'
            into 'build/docker'
        }
        copy {
            from 'build/libs'
            into 'build/docker'
            include '*.jar'
        }
    }
}

task run(dependsOn: bootJar) << {
    javaexec { main="-jar"; args bootJar.archivePath }
}

compileJava {
    options.encoding = "UTF-8"
}